//Problem Link: https://leetcode.com/problems/sort-an-array/

class Solution {
public:
    vector<int> sortArray(vector<int>& nums) {
        quickSort(nums, 0, nums.size() - 1);
        return nums;
    }
    void quickSort(vector<int>& arr, int low, int high) {
        if (low >= high)
            return;
        int pivotIndex=low+rand()%(high-low+1);
        swap(arr[pivotIndex], arr[high]);  
        int pivot=partition(arr,low,high);
        quickSort(arr,low,pivot-1);
        quickSort(arr,pivot+1,high);
    }
    int partition(vector<int>& arr, int low, int high) {
        int pivot=arr[high];
        int i=low;
        for(int j=low;j<high;j++) {
            if(arr[j]<pivot) {
                swap(arr[i],arr[j]);
                i++;
            }
        }
        swap(arr[i],arr[high]);
        return i;
    }
};
