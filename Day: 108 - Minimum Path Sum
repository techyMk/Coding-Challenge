//Problem Link: https://leetcode.com/problems/minimum-path-sum/

class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m=grid.size(), n=grid[0].size();
        vector<int> prev(n, 0);
        for(int i=0;i<m;i++) {
            vector<int> curr(n,0);
            for(int j=0;j<n;j++) {
                if(i==0&&j==0)
                    curr[j]=grid[i][j];
                else {
                    int up=grid[i][j]+(i>0?prev[j]:1e9);
                    int left=grid[i][j]+(j>0?curr[j-1]:1e9);
                    curr[j]=min(up,left);
                }
            }
            prev=curr;
        }
        return prev[n-1];
    }
};
