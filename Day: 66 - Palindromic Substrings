//Problem Link: https://leetcode.com/problems/palindromic-substrings/

class Solution {
public:
    int countSubstrings(string s) {
        int n=s.size();
        string t="#";
        for(char c:s) {
            t+=c;
            t+="#";
        }
        n=t.length();
        vector<int> dp(n,0);
        int center=0, right=0, count=0;
        for(int i=0;i<n;i++) {
            int mirror=2*center-i;
            if(i<right) {
                dp[i]=min(right-i, dp[mirror]);
            }
            int a=i+(1+dp[i]), b=i-(1+dp[i]);
            while(a<n && b>=0 && t[a]==t[b]) {
                dp[i]++;
                a++;
                b--;
            }
            if(i+dp[i]>right) {
                center=i;
                right=i+dp[i];
            }
            count+=(dp[i]+1)/2;
        }
        return count;
    }
};
